@page "/"
@using Core
@inject ILoginService loginService
@inject NavigationManager navManager
@inject ILocalStorageService localStorage

<div class="container d-flex justify-content-center align-items-center" style="min-height: 100vh;">
    <div class="row bg-light shadow-lg p-4 rounded w-100">
        <div class="col-md-6 d-flex flex-column justify-content-center">
            <h1 class="text-success">♻️ Velkommen til Erhvervsakademi Aarhus' genbrugsmarked</h1>
            <p class="lead text-secondary">Her kan du købe og sælge genbrugsvare.</p>
            <p>
                Formålet er at skabe et bæredygtigt miljø og fremme genbrug som en central del af vores klimainitiativer.
                For at støtte dette projekt vil Eaaa stille lokaler til rådighed til opbevaring af genbrugsvarer,
                som vil være tilgængelige i en begrænset åbningstid med personale til stede.
            </p>
            <div class="recycle-image-container">
                <img src="img/recycle.jpeg" alt="Genbrug" class="img-fluid mt-3 shadow">
            </div>
        </div>

        <div class="col-md-6 d-flex flex-column justify-content-center bg-white p-4 rounded shadow-sm">
            <h3 class="text-center text-success mb-4">🌍 Login</h3>
            <EditForm Model="@loginRequest" OnValidSubmit="OnClickLogin">
                <DataAnnotationsValidator />
                <div class="mb-3">
                    <label for="username" class="form-label">Brugernavn:</label>
                    <InputText id="username" @bind-Value="loginRequest.Username" 
                               placeholder="Indtast brugernavn..." class="form-control" />
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Password:</label>
                    <InputText id="password" @bind-Value="loginRequest.Password" type="password" 
                               placeholder="Indtast password..." class="form-control" />
                </div>
                <div class="d-flex justify-content-end mb-3">
                    <button type="submit" class="btn btn-success w-100" disabled="@isLoggingIn">
                        @(isLoggingIn ? "Logger ind..." : "Login")
                    </button>
                </div>
            </EditForm>
            @if (!string.IsNullOrEmpty(errorText))
            {
                <div class="text-danger text-center">
                    <span>@errorText</span>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private LoginRequest loginRequest = new LoginRequest();
    private string errorText = "";
    private bool isLoggingIn = false;

    private async Task OnClickLogin()
    {
        if (string.IsNullOrWhiteSpace(loginRequest.Username) || string.IsNullOrWhiteSpace(loginRequest.Password))
        {
            errorText = "Brugernavn og adgangskode må ikke være tomme.";
            return;
        }

        isLoggingIn = true;

        try
        {
            var loginResponse = await loginService.Login(loginRequest);

            if (loginResponse != null && !string.IsNullOrEmpty(loginResponse.UserId))
            {
                await localStorage.SetItemAsync("userid", loginResponse.UserId);
                navManager.NavigateTo("/Home");
            }
            else
            {
                await localStorage.RemoveItemAsync("userid");
                errorText = "Forkert brugernavn eller adgangskode.";
            }
        }
        catch (Exception ex)
        {
            errorText = $"En fejl opstod: {ex.Message}";
        }
        finally
        {
            isLoggingIn = false;
        }
    }
}
